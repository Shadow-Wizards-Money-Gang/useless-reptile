plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.5.1"
}

version = project.mod_version + "-" + project.minecraft_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url 'https://maven.isxander.dev/releases' }
    maven { url "https://maven.nucleoid.xyz/" }
    maven { url 'https://jitpack.io' }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"
    modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}-fabric"
    modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation include("eu.pb4:common-protection-api:${project.protection_api_version}")
    modImplementation include ("com.github.NordAct:Primitive-Multipart-Entities:${project.primitive_multipart_entities_version}")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    withSourcesJar()
}

loom {
    accessWidenerPath = file("src/main/resources/uselessreptile.accesswidener")
    runs {
        server {
            server()
            vmArg "-Dgeckolib.disable_examples=true"
        }
        client {
            client()
            vmArg "-Dgeckolib.disable_examples=true"
            programArgs "--username", "Nord_Act"
        }
    }
}

publishMods {
    file = remapJar.archiveFile
    changelog = project.file("CHANGELOG.md").getText()
    type = BETA
    displayName = "Useless Reptile ${project.version}"
    modLoaders.add("fabric")
    //dryRun = true

    curseforge {
        projectId = "677634"
        projectSlug = "useless-reptile"
        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        minecraftVersions.add(project.property("minecraft_version") as String)
        requires("fabric-api", "yacl", "geckolib")
    }
    modrinth {
        projectId = "YE4QRt8F"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        minecraftVersions.add(project.property("minecraft_version") as String)
        requires("fabric-api", "yacl", "geckolib")
    }
}
